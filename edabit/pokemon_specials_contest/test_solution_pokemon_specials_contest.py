
import unittest
from solution_pokemon_specials_contest import pk_special_winner


class PokemonSpecialsContest(unittest.TestCase):
    def test_solution(self):
        self.assertEqual(pk_special_winner(4, 14), 4)
        self.assertEqual(pk_special_winner(71, 54), 71)
        self.assertEqual(pk_special_winner(43, 44), -1)
        self.assertEqual(pk_special_winner(83, 33), -1)
        self.assertEqual(pk_special_winner(41, 45), 41)
        self.assertEqual(pk_special_winner(5, 80), 80)
        self.assertEqual(pk_special_winner(92, 51), 51)
        self.assertEqual(pk_special_winner(27, 12), 12)
        self.assertEqual(pk_special_winner(18, 72), -1)
        self.assertEqual(pk_special_winner(17, 7), -1)
        self.assertEqual(pk_special_winner(68, 6), 6)
        self.assertEqual(pk_special_winner(60, 97), -1)
        self.assertEqual(pk_special_winner(63, 74), -1)
        self.assertEqual(pk_special_winner(81, 30), -1)
        self.assertEqual(pk_special_winner(49, 37), 37)
        self.assertEqual(pk_special_winner(24, 76), 76)
        self.assertEqual(pk_special_winner(91, 82), 82)
        self.assertEqual(pk_special_winner(34, 68), 34)
        self.assertEqual(pk_special_winner(63, 51), -1)
        self.assertEqual(pk_special_winner(90, 17), -1)
        self.assertEqual(pk_special_winner(61, 65), -1)
        self.assertEqual(pk_special_winner(31, 40), -1)
        self.assertEqual(pk_special_winner(20, 3), -1)
        self.assertEqual(pk_special_winner(58, 69), 58)
        self.assertEqual(pk_special_winner(87, 65), -1)
        self.assertEqual(pk_special_winner(92, 47), 92)
        self.assertEqual(pk_special_winner(71, 66), 71)
        self.assertEqual(pk_special_winner(9, 62), 62)
        self.assertEqual(pk_special_winner(85, 17), -1)
        self.assertEqual(pk_special_winner(1, 33), 33)
        self.assertEqual(pk_special_winner(12, 13), 12)
        self.assertEqual(pk_special_winner(52, 9), -1)
        self.assertEqual(pk_special_winner(87, 14), -1)
        self.assertEqual(pk_special_winner(33, 28), 28)
        self.assertEqual(pk_special_winner(77, 52), -1)
        self.assertEqual(pk_special_winner(19, 78), -1)
        self.assertEqual(pk_special_winner(24, 89), -1)
        self.assertEqual(pk_special_winner(72, 99), 72)
        self.assertEqual(pk_special_winner(77, 18), -1)
        self.assertEqual(pk_special_winner(25, 44), 44)
        self.assertEqual(pk_special_winner(57, 51), -1)
        self.assertEqual(pk_special_winner(60, 22), -1)
        self.assertEqual(pk_special_winner(36, 65), -1)
        self.assertEqual(pk_special_winner(98, 34), 98)
        self.assertEqual(pk_special_winner(26, 12), 26)
        self.assertEqual(pk_special_winner(51, 56), -1)
        self.assertEqual(pk_special_winner(59, 94), -1)
        self.assertEqual(pk_special_winner(70, 44), -1)
        self.assertEqual(pk_special_winner(67, 13), 13)
        self.assertEqual(pk_special_winner(31, 33), 31)
        self.assertEqual(pk_special_winner(37, 85), -1)
        self.assertEqual(pk_special_winner(3, 86), 3)
        self.assertEqual(pk_special_winner(96, 71), 96)
        self.assertEqual(pk_special_winner(93, 34), 34)
        self.assertEqual(pk_special_winner(63, 99), -1)
        self.assertEqual(pk_special_winner(69, 65), 65)
        self.assertEqual(pk_special_winner(41, 8), -1)
        self.assertEqual(pk_special_winner(13, 53), -1)
        self.assertEqual(pk_special_winner(84, 35), -1)
        self.assertEqual(pk_special_winner(73, 70), -1)
        self.assertEqual(pk_special_winner(84, 70), 84)
        self.assertEqual(pk_special_winner(72, 14), 72)
        self.assertEqual(pk_special_winner(74, 22), 74)
        self.assertEqual(pk_special_winner(61, 90), -1)
        self.assertEqual(pk_special_winner(6, 46), 6)
        self.assertEqual(pk_special_winner(58, 77), -1)
        self.assertEqual(pk_special_winner(39, 46), -1)
        self.assertEqual(pk_special_winner(79, 20), -1)
        self.assertEqual(pk_special_winner(72, 68), 72)
        self.assertEqual(pk_special_winner(80, 98), 80)
        self.assertEqual(pk_special_winner(42, 97), 97)
        self.assertEqual(pk_special_winner(26, 19), -1)
        self.assertEqual(pk_special_winner(65, 35), -1)
        self.assertEqual(pk_special_winner(12, 65), 12)
        self.assertEqual(pk_special_winner(35, 49), -1)
        self.assertEqual(pk_special_winner(58, 89), -1)
        self.assertEqual(pk_special_winner(18, 67), 18)
        self.assertEqual(pk_special_winner(75, 69), 69)
        self.assertEqual(pk_special_winner(2, 4), 4)
        self.assertEqual(pk_special_winner(83, 49), 83)
        self.assertEqual(pk_special_winner(11, 57), -1)
        self.assertEqual(pk_special_winner(56, 87), 56)
        self.assertEqual(pk_special_winner(33, 17), -1)
        self.assertEqual(pk_special_winner(79, 96), 79)
        self.assertEqual(pk_special_winner(33, 4), -1)
        self.assertEqual(pk_special_winner(80, 77), 80)
        self.assertEqual(pk_special_winner(52, 57), 57)
        self.assertEqual(pk_special_winner(68, 26), -1)
        self.assertEqual(pk_special_winner(9, 38), 9)
        self.assertEqual(pk_special_winner(99, 42), -1)
        self.assertEqual(pk_special_winner(61, 86), -1)
        self.assertEqual(pk_special_winner(51, 22), 22)
        self.assertEqual(pk_special_winner(21, 77), -1)
        self.assertEqual(pk_special_winner(32, 26), -1)
        self.assertEqual(pk_special_winner(73, 47), 73)
        self.assertEqual(pk_special_winner(29, 92), 92)
        self.assertEqual(pk_special_winner(7, 37), 7)
        self.assertEqual(pk_special_winner(12, 63), 12)
        self.assertEqual(pk_special_winner(53, 88), -1)
        self.assertEqual(pk_special_winner(34, 60), 60)


if __name__ == '__main__':
    unittest.main()
