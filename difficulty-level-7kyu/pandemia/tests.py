
""" To start the tests, type from CLI: python tests.py """

import unittest
from solution import infected


class TestSolution(unittest.TestCase):

    def test_simple_cases(self):
        all_maps = [
            ("01000000X000X011X0X", 73.33333333333333),
            ("01X000X010X011XX", 72.72727272727273),
            ("XXXXX", 0),
            ("00000000X00X0000", 0),
            ("0000000010", 100),
            ("000001XXXX0010X1X00010", 100),
            ("X00X000000X10X0100", 42.857142857142854),
        ]
        for value, result in all_maps:
            self.assertEqual(infected(value), result)

    def test_advanced_cases(self):
        all_maps = [
            ("000000", 0.0),
            ("0XX0X00X1000X0000XXX001000X0010000X0100000000000100011000100001000000",  86.4406779661017),
            ("010XX00", 60.0),
            ("10000000X00000X000X1000100XX00X0X0X0000X00100XXX10000", 60.97560975609756),
            ("0000XX0X0000000X00010000X00X001100100000", 58.82352941176471),
            ("0000000", 0.0),
            ("0000000000000X000010X1XX0X00X0000X00000000X0X0000XX00X000000X000000X0000010", 22.950819672131146),
            ("X0X000000010000000X00X01000X000X00000X000XX000X1101X000000X0", 50.0),
            ("00000X0X00000001000000X0XXXX0000X0X000X00000X010000010X", 53.48837209302325),
            ("000000000X0X000X000000", 0.0),
            ("000010X0000X0X0000000X000X000000000000000000000X0X000000000X00001000X0001000X00000010X0000000001X",
             45.88235294117647),
            ("1000X0010100000110X00X01000XX0010000000X00XX0X00000X100X0X00X10000X010X0XX000000XX10000100X000X0000",
             65.38461538461539),
            ("X000", 0.0),
            ("10X0100X0000X00X00X000X0000000X00X000000X000X0X000000000000000000000X0110XX000000000X0000000000", 12.5),
            ("000010X1X00001X00000000X100000000X0X0X0X00000X100X0X00", 55.81395348837209),
            ("0X0X01100X000001000000000010000100X0000X100X000000000X10000100000X000000X000010", 70.0),
            ("1000000X0000000X00000000X0000X00X000X000001X00100X00X0X00XX000X000X0", 33.33333333333333),
            ("000X0000100100X000XX00000X00001010X000XX0XX1", 55.88235294117647),
            ("11000X011001XX00X00001001", 90.47619047619048),
            ("0X000000100X0000001XXX0000001XX00011000000000X010000000X000000000X", 82.14285714285714),
            ("X0101000000000X000000000001000000XX000X10000000000000000000X000X100X0000X0000000000010000", 87.5),
            ("0001010X00000000X00000X010X0001000100000X0X00XX10X000X0010010000", 64.81481481481481),
            ("1000X1000000000", 100.0),
            ("0000000X00", 0.0),
            ("X10X00X00000X0000X000010X000X00X000000000XX00100X0001110X00000000X000X000000X0000X0X0",
             29.411764705882355),
            ("000", 0.0),
            ("0", 0.0),
            ("000X00001X00", 50.0),
            ("XX00X0000000101001X010000X0X0X00000000XX000XX", 55.88235294117647),
            ("0000000100000100", 100.0),
            ("X0000000X1000X000000X0000001000000X000X0000000X000100000000000000X0000X0000XX00000X0X1XXXX001000000",
             54.87804878048781),
            ("100001001000000X0X00010100X0X1010X00X00000XX0X", 72.97297297297297),
            ("000X000000X00000X010100X0X0000X00000X00XX0000000", 15.384615384615385),
            ("0000000XX00100X10X010000000X00010010X0000010000000000000X11000", 87.27272727272727),
            ("X00101", 100.0),
            ("10000001000000110000X0X000000X000XX000XX000000", 51.28205128205128),
            ("0000XX000000000000XX000X0001XX000000000X00001X110XX00XX00000000X00X0X00X0010X01000X00000",
             30.434782608695656),
            ("00000000000000X00000000000X0", 0.0),
            ("X0000000X0X00", 0.0),
            ("00XXXX00000000X00X0010X", 25.0),
            ("0XX0000000000010000001000000000X00000000000000X0X0000000", 54.90196078431373),
            ("0100X00000000000000000000000X0010000000X00X000000X00X000000010000000XXX000000100", 53.52112676056338),
            ("000000000000X10001000X0X00000000100000000000000000", 72.3404255319149),
            ("010X00001X0X1000010010010000X0010000XX1X00X0X000000000000X0X0000000000X000000X000100X000000XX0X00000",
             45.78313253012048),
            ("0X00000X00000000000000X0000100001010X00000000X0000X0000X00X0X0XX100X00000XXX000000000000001X0101000",
             45.78313253012048),
            ("000X00000010X00X000X00X0000001X0000X00000", 44.11764705882353),
            ("000X0XXXX01X00X000000011000000X00000000X0100X0000000100", 68.88888888888889),
            ("000X010000X100000", 80.0),
            ("00X00000X10000000X001000X1X0X0100X0", 67.85714285714286),
            ("010X00000000100X0010010X000100000X0000000000X00000100001000", 81.48148148148148),
            ("00X0001000", 77.77777777777779),
            ("010000000X0000000X0XX100XX00010X000000X01X00X0X000000100000X0000000010000010000000X00100000X0",
             77.21518987341773),
            ("000X00100X100000XX00000X010X0000100000X0X01X00X100X10000000X000X00001010000X0000X0XX00000",
             66.66666666666666),
            ("XX100", 100.0),
            ("00000000", 0.0),
            ("00XX1110X00XXX00000000000000100000000", 87.09677419354838),
            ("XX00100000000X0XX0X0X00000000000000000000X0X0", 30.555555555555557),
            ("000X0100000010", 76.92307692307693),
            ("0010X00100000X00X000X0XX0X0000X0", 50.0),
            ("1000000", 100.0),
            ("XX0X00X0010000000000X0000X0X00X0010X000X000010X011X00000000", 55.319148936170215),
            ("0110000000X00X00X0X0X0000000X0X000000000X10000", 39.473684210526315),
            ("000000X0001X00000X0XX0X0X00X00100X10X10000", 50.0),
            ("00000X000X000X00000000100010000000000000000000", 74.4186046511628),
            ("X000X0XXX00XX0000000", 0.0),
            ("000000000000101000000010X000000000XX00000X0X0XX0X0X10", 59.09090909090909),
            ("10000010XX0X0000XX0X00011X0X000X001000X000X000X0100X00X0110000XX00X0100XX", 62.96296296296296),
            ("000X0X000000", 0.0),
            ("000000X00000000X000000XX00", 0.0),
            ("0000X00010XX0000000000X0X00X000XXX000010000X0000XX0X00000000X000XX10100X00X0X00XXX0X0000",
             29.230769230769234),
            ("00000000000000001X000X000X0X0X01000000XX0000X", 67.56756756756756),
            ("0000001X0X0000X00000XX000X00X0XX0100000X", 46.666666666666664),
            ("0000X00X000X00X000000X0001XX0000X0X0000000000000X00001010010X0X00010100X0000000001", 47.82608695652174),
            ("000000000000XX0000X000", 0.0),
            ("00XX01000100X0000000X000X000000100000000X0100000X00X0100000", 72.54901960784314),
            ("000X100X000100000000100000X100000X100000X00000100110000X00000X00XX1000000XX00", 81.81818181818183),
            ("0X0X0000010", 77.777777777777779),
            ("000000010000X000000X000X0000001XX00X000X0011001000X0000000000000", 51.78571428571429),
            ("0X00000000000000000X001X000000001000X00000X100000X00X0000X0001X00XX", 44.642857142857146),
            ("000000000X001X0X000", 18.75),
            ("0X0X0X0X00XX000000X0000", 0.0),
            ("000000110X00X000X0000X01000101000100", 71.875),
            ("000001000X0010X0101X10X0X00010100X00", 90.0),
            ("000X00X0X0XXX100000X10000X00000000X0X1XX100000X000X00XX000000000X0000101X1110XX00000000000X000000",
             38.15789473684211),
            ("000X00X00000000X0XX000X0000X010000XX100000000X0", 40.54054054054054),
            ("XX00XXX0000000000000XX000000000000X0110100100000000X1X0000X01000000000X000000X00X00X00X000000X10000",
             40.243902439024396),
            ("01X0000000XX000000000X000X0000X0X00X0000XX000000X0X100000000100101X00000", 28.8135593220339),
            ("000XX00000000X1X00010000X000010000010X0X000000000", 50.0),
            ("X0X000000000X0000X11000000000000X00000000X000000010000100XX00XX00XX1000", 55.932203389830505),
            ("X000X0000XX0X0X10X0000X0XX1X000X01100X0000000X0", 24.242424242424242),
            ("0X0000XX00X00X00XX000000001100000X00XXX000000000011001100X0000010100000X00100XXXX0X0X00", 75.0),
            ("X000X00X00000001000X10100000X000X00000000X0", 52.77777777777778),
            ("0000000X00X0000000000000110000000000000X10X00XX01001X1010X000000000X001X10000X00XXX00000",
             63.51351351351351),
            ("0X0100X00000001000000XX0010001000XX00X001000000XXX000000X000", 75.51020408163265),
            ("0001XXX000001X001XX0000000X0", 61.904761904761905),
            ("X00000000", 0.0),
            ("00X01000000000X000100X0000010XX000X010000000X0000X00X00X01XX00X0000100000X00000000X00X00010X010XX0",
             67.08860759493672),
            ("00000000X101X000000X00X0000000000000000000100000X000X0000XX10000X01000000X00000X0000", 56.16438356164384),
            ("XX000X10010100X000000", 47.05882352941176),
            ("00000X000X0000000000X000010X000X10000X100XX", 40.0),
        ]
        for value, result in all_maps:
            self.assertEqual(infected(value), result)


if __name__ == '__main__':
    """ The following instruction executes the tests
    by discovering all classes present in this file
    that inherit from unittest.TestCase.
    """
    unittest.main()
